<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:xanx="http://schemas.microsoft.com/developer/xanx/2005"><head><META http-equiv="Content-Type" content="text/html; charset=UTF-8"><META NAME="save" CONTENT="history"><title>WinForms によるコンテンツ読み込みのサンプル</title>
<style><!--
/***********************************************************
 *             SCRIPT-SUPPORTING STYLES
 ***********************************************************/

/* Defines the userData cache persistence mechanism. */
.userDataStyle
{
	behavior: url(#default#userData);
}

/* Used to save the scroll bar position when navigating away from a page. */
div.saveHistory
{
	behavior: url(#default#saveHistory);
}

/* Formats the expand/collapse images for all collapsible regions. */
img.toggle
{
	border: 0;
	margin-right: 5;
}

/* Formats the Language filter drop-down image. */
img#languageFilterImage
{
	border: 0;
	margin-left: 0;
	vertical-align: middle;
}

/* Formats the Members Options filter drop-down image. */
img#membersOptionsFilterImage
{
	border: 0;
	margin-left: 0;
	vertical-align: middle;
}

/* Formats the Collapse All/Expand All images. */
img#toggleAllImage
{
	margin-left: 0;
	vertical-align: middle;
}

/* Supports XLinks */
MSHelp\:link
{
 	text-decoration: underline;
	color: #0000ff; 
	hoverColor: #3366ff;
	filterString: ;
}


body
	{
	background:	#FFFFFF;
	color: #000000;
	font-family:	Verdana;
	font-size: medium;
	font-style: normal;
	font-weight: normal;
	margin-top:	0;
	margin-bottom:	0;
	margin-left:	0;
	margin-right:	0;
	width:	100%;
	/*font-size: 110%;*/
	}

div.section
	{
	margin-left: 15px;
	}

div.hxnx5
	{
	margin-left: 1.5em;
	}

/* Font for all headings */	
h1, h2, h3, h4, h5, h6
	{
	font-family: Verdana, Arial, Helvetica, sans-serif;
	margin-top: 18;
	margin-bottom: 8; 
	font-weight: bold;
	}
h1
	{
	font-size: 130%;
	color: #003399;
	}
div#scrollyes h1 /* Changes font size for full-scrolling topic */
	{
	font-size: 150%;
	}
h2
	{
	font-size: 125%;
	}
h3
	{
	font-size: 115%;
	margin-top: 9;
	margin-bottom: 4; 
	}
h4
	{
	font-size: 115%;
	margin-top: 9;
	margin-bottom: 4; 
	}
h5
	{
	font-size: 100%;
	margin-top: 9;
	margin-bottom: 4; 
	}
h6
	{
	font-size: 100%;
	margin-top: 9;
	margin-bottom: 4; 
	}

ul p, ol p, dl p
	{
	margin-left: 0em;
	}

p
	{
	margin-top: .6em;
	margin-bottom: .6em;
	}
	
td p
	{
	margin-top: 0.0em;
	margin-bottom: 0.6em;
	}

dd p
	{
	margin-top: 0.0em;
	margin-bottom: 0.6em;
	}

.image
	{
	text-align: center;
	}

dl
	{
	margin-top: 0em; 
	margin-bottom: 1.3em;
	}

dd
	{
	margin-bottom: 0em;
	margin-left: 0;
	}

dl.glossary dd 
{
	margin-bottom: 0em;  
	margin-left: 1.5em; 
}

dt
	{
	margin-top: .6em;
	margin-bottom: 1;
	}

ul, ol
	{
	margin-top: 0.6em;
	margin-bottom: 0.6em; 	
	}
	
ol
	{
	margin-left: 2.5em; 
	
	}	
	
ul
	{
	list-style-type: disc; 
	margin-left: 1.9em; 
	}

li
	{
	margin-bottom: 0.4em;
	}

ul ol, ol ol
	{
	list-style-type: lower-alpha;
	}

pre
	{
	margin-top: .6em;
	margin-bottom: .6em; 
	}

pre
	{
	font: 105% Lucida, mono; 
	color: #000066;
	}

code
{
	font-family: Monospace, Courier New, Courier;
	font-size: 105%;
	color:	#000066;
}

table.userdata td 
	{
	background: #ffffff;
	background-color: #F5F5F5;
	border-color: #ffffff;
	border: none;
	}	
table.clsWarning
	{
	background: #ffffff;
	padding: 0px;
	margin: 0px;
	border: none;
	}
table.clsWarning td
	{
	padding: 0px;
	margin: 0px;
	background: #ffffff;
	vertical-align: middle;
	font-size: 70%;
	}

div#mainSection table
	{
	width: 98%;
	background: #ffffff;
	margin-top: 5px;
	margin-bottom: 5px;
	}

div#mainSection table th
	{ 
	padding: 5px 6px;
	background: #EFEFF7;
	text-align: left;
	font-size: 70%;
	vertical-align: bottom;
	border-bottom: 1px solid #C8CDDE;
	}
div#mainSection table td
	{ 
	padding: 5px 5px;
	background: #F7F7FF;
	vertical-align: top;
	font-size: 70%;
	border-bottom: 1px solid #D5D5D3;
	}

div#syntaxCodeBlocks table th
	{
	padding: 1px 6px;
	color: #000066;
	}

div#syntaxCodeBlocks table td
	{
	padding: 1px 5px;
	}

/* Applies to the running header text in the first row of the upper table in the
   non-scrolling header region. */
span#runningHeaderText
{
	color: #003399;
	font-size: 90%;
	padding-left: 13;
}

/* Applies to the topic title in the second row of the upper table in the
   non-scrolling header region. */
span#nsrTitle
{
	color: #003399;
	font-size: 120%;
	font-weight: 600;
	padding-left: 13;
}

/* Applies to everything below the non-scrolling header region. */
div#mainSection
{
	font-size: 70%;
	width: 100%;
}

/* Applies to everything below the non-scrolling header region, minus the footer. */
div#mainBody
{
	font-size: 90%;
	margin-left: 15;
	margin-top: 10;
	padding-bottom: 20;
}

/* Adds right padding for all blocks in mainBody */
div#mainBody p, div#mainBody ol, div#mainBody ul, div#mainBody dl
{
	padding-right: 5;
}

div#mainBody div.alert, div#mainBody div.code, div#mainBody div.tableSection
{
	width:98.9%;
}

div.alert p, div.code p
{
	margin-top:5;
	margin-bottom:8;
}

/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Begin Note Styles - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
div#mainSection div.alert table
{
	border: 0;
}

div#mainSection div.alert table th
{
	padding-top: 0;
	padding-bottom: 0;
	padding-left: 5;
	padding-right: 5;
}

div#mainSection div.alert table td
{
	padding-left: 5;
	padding-right: 5;
}

img.note
{
	border: 0;
	margin-left: 0;
	margin-right: 3;
}
/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - End Note Styles - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/

/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Begin Non-scrolling Header Region Styles - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
/* Applies to the entire non-scrolling header region. */
div#header
{
	background-color: #D4DFFF;
	padding-top:	0;
	padding-bottom:	0;
	padding-left:	0;
	padding-right:	0;
	width:	100%;
}

/* Applies to both tables in the non-scrolling header region. */
div#header table
{
	margin-top:	0;
	margin-bottom: 0;
	border-bottom-color: #C8CDDE;
	border-bottom-style: solid;
	border-bottom-width: 1;
	background: #D4DFFF;
	width:	100%;
}

/* Applies to cells in both tables in the non-scrolling header region. */
div#header table td
{
	color: #0000FF;
	font-size: 70%;
	padding-right: 20;
	padding-top: 1;
	padding-bottom: 1;
	border: none;
	background: #D4DFFF;
}

/* Applies to the last row in the upper table of the non-scrolling header region. Text 
   in this row includes See Also, Constructors, Methods, and Properties. */
div#header table tr#headerTableRow3 td
{
	padding-bottom: 2;
	padding-top: 5;
	padding-left: 15;
}

/* Applies to the lower table in the non-scrolling header region. Text in this table
   includes Collapse All/Expand All, Language Filter, and Members Options. */
div#header table#bottomTable
{
	border-top-color: #FFFFFF;
	border-top-style: solid;
	border-top-width: 1;
	text-align: left;
	padding-left: 15;
}


blockquote
	{
	margin-left: 3.8em;
	margin-right: 3.8em;
	margin-top: .6em;
	margin-bottom: .6em;
	}

sup
	{
	text-decoration: none;
	font-size: smaller; 
	}

a:link
	{
	color: #0000FF;
/*    font-weight: bold */
	}
	
a:visited
	{
	color: #0000AA;
/*    font-weight: bold	*/
	}
	
a:hover
	{
	color: #3366FF;
/*    font-weight: bold */
	}
	
.label
	{
	font-weight: bold; 
	margin-top: 1em;
	margin-left: -26px;
	}
	
.tl
	{
	margin-bottom: .75em; 
	}
	
.atl
	{
	padding-left: 1.5em;
	padding-bottom: .75em; 
	}
	
.cfe
	{
	font-weight: bold; 
	}
	
.mini
	{
	font-size: smaller;
	}
	
.dt
	{
	margin-bottom: -.6em; 
	}
	
.indent
	{
	margin-left: 1.9em; 
	margin-right: 1.9em;
	}

.product
	{
	text-align: right;
	color: #333333;
	font-size: smaller;
	font-style: italic;
	}

.buttonbarshade
	{
	position: relative;
	margin: 0;
	left: 0px;
	top: 2;
	width: 50%;
	height: 40px;
	}

.buttonbartable
	{
	position: absolute;
	margin: 0;
	padding:0;
	border:0;
	left:0px;
	top: 2;
	width: 100%;
	height: 40px;
	}

/* background color, font for header */ 
table.buttonbartable td, table.buttonbarshade td
	{
	background: #ffffff; /*#5177B8; #80C615;*/
	border-left: 0px solid #80C615;
	margin: 0;
	padding: 0px 0px 0px 0px;
	font-family: Impact, sans-serif;
	font-size: 14pt;
	}

table.buttonbartable td.button1
	{
	background: #5177B8; /*#80C615;*/;
	padding: 0;
	font-weight: bold;
	text-align: center;
	cursor: hand;
	}

table.buttonbartable td.button2
	{
	background: #5177B8; /*#80C615;*/;
	font-weight: bold;
	text-align: center;
	}

table.buttonbartable td.button3
	{
	background: #5177B8; /*#80C615;*/;
	font-weight: bold;
	text-align: center;
	}

table.buttonbartable td.runninghead
	{
	padding-left: 0px;
	font-style: italic;
	text-align: left;
	}

.version
	{
	text-align: left;
	color: #000000;
	margin-top: 3em;
	margin-left: -26px;
	font-size: smaller;
	font-style: italic;
	}

.lang, .ilang
	{
	color: #0000ff;
	font: normal 7pt Arial, Helvetica, sans-serif;
	}

div.langMenu
	{
	position: absolute;
	z-index: 1;
	width: 96pt;
	padding: 8pt;
	visibility: hidden;
	border: 1px solid #000000;
	background: #ffffd0;
	}

div.langMenu ul
	{
	padding-left: 2em;
	margin-left: 0;
	}

div.filtered
	{
	margin: 4pt 0 8pt -26px;
	padding: 4px 4px 8px 26px;
	width: 100%;
	border: 2px solid #aaaacc;
	background: #ffffff;
	}

div.filtered2
	{
	margin: 4pt 0 8pt -26px;
	padding: 4px 4px 8px 26px;
	width: 100%;
	border: none;
	background: #ffffff;
	}

div.filtered h1, div.filtered h2, div.filtered h3, div.filtered h4
	{
	margin-left: -22px;
	}

div.filtered span.lang
	{
	position: relative;
	left: -22px;
	}

div.reftip
	{
	position: absolute;
	z-index: 1;
	padding: 8pt;
	visibility: hidden;
	border: 1px solid #000000;
	background: #ffffd0;
	}

a.synParam
	{
	color: #0000FF;
	/*color: #3F7800;*/ 	
	/*color: #8DC54F;*/
	text-decoration: none;
    font-weight: normal;
	}

a.synParam:hover
	{
	text-decoration: underline;
    font-weight: normal;
	}

div.sapop
	{
	position: absolute;
	z-index: 1;
	left: 26px;
	width: 100%;
	padding: 10px 10px 10px 36px;
	visibility: hidden;
	border: 1px solid #000000;
	background: #ffffd0;
	}

div.footer
	{
	width: 100%;
	border: none;
	background: #ffffff;
	margin-top: 18pt;
	padding-bottom: 12pt;
	color: #0000FF;
	/*color: #228B22; */
	text-align: center;
	font-size: 76%;
	}

div.preliminary
	{
	margin-top: 8pt;
	padding-bottom: 12pt;
	color: #A0A0A0;
	}

/* A procedure section. eg. 'To create a file', 'To add a value' */
div.proc
    {
	margin-left: 0.5em; 
    }
     
/* The title of a 'procedure' section. */
div.proc h3
    {
	font-family: Verdana, Arial, Helvetica, sans-serif;
	font-weight: bold;
	font-size: 115%;
	margin-top: 1em;
	margin-bottom: 0.4em;
	margin-left: -0.5em; 
	color: #003399;
    }

div.proc ul
    {
    margin-left: 1.5em;
    }

div.proc ol
    {
    margin-left: 2.0em;
    }
      
.note
	{
	margin-left: 14pt;
	margin-right: 12pt;
	}

.indent1
	{
	margin-left: 12pt;
	}

.indent2
	{
	margin-left: 24pt;
	}

.indent3
	{
	margin-left: 36pt;
	}

p.proch
	{
	padding-left: 16px;
	}

p.proch img
	{
	position: relative; 
	vertical-align: top;
	left: -18px; 
	margin-right: -14px; 
	margin-bottom: -18px;
	}
	
div.clsPlatSpec
{
	background-color:#FFF8DC;
	border-style:solid;
	border-width:1pt 0pt 0pt 1pt;
	border-color:#ffE4C4;
	margin-top:0.6em;
	width:100%;
}


/* Applies to the language labels in the Language Filter drop-down list. */
.languageFilter
{
	color:	#0000FF;
	cursor:hand;
	text-decoration:underline;
	padding-bottom:4;
}

/* Dropdown areas */

#languageSpan {
	position: absolute;
	visibility: hidden;
	border-style: solid;
	border-width: 1px;
	border-color: #C8CDDE;
	background: #d4dfff;
	padding: 4px;
	font-size: 70%;
}

#membersOptionsSpan {
	position: absolute;
	visibility: hidden;
	border-style: solid;
	border-width: 1px;
	border-color: #C8CDDE;
	background: #d4dfff;
	padding: 4px;
	font-size: 70%;
}
--></style>

<xml><MSHelp:TOCTitle Title="WinForms Content Loading Sample" /><MSHelp:RLTitle Title="WinForms Content Loading Sample" /><MSHelp:Keyword Index="A" Term="O:Microsoft.Xna.WinFormsContentLoading" /><MSHelp:Keyword Index="A" Term="7a6386f1-3199-be24-a48f-92ccfb1e0501" /><MSHelp:Keyword Index="K" Term="WinForms Content Loading Sample" /><MSHelp:Attr Name="ProjType" Value="LocalProj" /><MSHelp:Attr Name="ProjType" Value="XNA_20" /><MSHelp:Attr Name="DocSet" Value="XNA" /><MSHelp:Attr Name="DocSet" Value="ExpressLibVS" /><MSHelp:Attr Name="DocSet" Value="C#" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="AssetID" Value="7a6386f1-3199-be24-a48f-92ccfb1e0501" /><MSHelp:Attr Name="TopicType" Value="kbOrient" /></xml>
</head><body><div id="mainSection"><div id="mainBody">

<h1>WinForms によるコンテンツ読み込みのサンプル</h1>

このサンプルでは、通常どおり前もってすべてのコンテンツをビルドするのではなく、Content Pipeline インポーターとプロセッサをその場で動的に実行することによって、実行時に任意の 3D モデルをインポートする方法を示します。

<a name="ID2EK"></a><h1 class="heading">サンプルの概要</h1><div id="ID2EK" class="hxnx1">
    

<p>XNA Framework Content Pipeline は、3D モデル、テクスチャー、およびサウンドなどのコンテンツ ファイルを、ゲームですばやく読み込んで使用できる形式に変換する処理を担当します。通常、これらのコンテンツ ファイルは、Visual Studio プロジェクトに追加されます。Content Pipeline ビルド プロセスは、コードをビルドするときに、Visual Studio 内部で実行されます。コンテンツ ビルドによって生成されるコンパイル済みの .xnb ファイルは、その後、ゲームの実行可能ファイルと共に配布されます。この方法には、時間のかかる可能性のあるコンテンツ処理を前もって行えるという利点があります。最初に処理を終えることによって、ゲームは、コンパイル済みのコンテンツ ファイルをできるだけ速く読み込めるようになります。また、プロジェクトをビルドするときに、Visual Studio でコンテンツのビルド エラーがすべて表示されます。これは、後で実行時にコンテンツを使用したときにエラーを検出するよりも望ましいです。</p>

<p>この方法には問題が 1 つだけあります。必要になるコンテンツが前もってわかっていない場合はどうなるのでしょう。ユーザーによって作成された新しいモデルをゲームに追加できるようにしたり、レベル エディターを作成して実行時のファイル セレクターで選ばれた任意のファイルを読み込ませる必要があるかもしれません。</p>

<p>この解決策は、Content Pipeline ビルド プロセスを、ランタイムでコードから呼び出すことです。Content Pipeline は、MSBuild タスクとして実装されます。MSBuild API を使用すると、一時コンテンツ プロジェクトを作成し、任意のファイルを追加して、一時ディレクトリにビルドできます。この結果得られる .xnb ファイルを <b>ContentManager</b> から読み込むことができます。これを必要なだけ繰り返して、任意のコンテンツ ファイルをインポートし読み込むことができます。</p>

<p>このサンプルは、以前に WinForms グラフィック デバイスのサンプルで説明したクラスに基づきます。ファイル セレクターを使用して、ユーザーが任意の .fbx または .x 形式のモデルを選択できるようにする 3D モデル ビューアー コントロールを実装します。続いて、そのファイルをインポートし読み込んで、画面上に表示します。</p>

<p>Content Pipeline ビルド プロセスはインクリメンタルです。つまり、以前のビルド時にコンテンツの一部が既に処理されていた場合、変換作業を省略できますが、このサンプルでは終了時に一時ディレクトリを削除します。このため、以降の実行時にもコンテンツを最初からリビルドする必要があります。シナリオによっては、このディレクトリ管理システムをより単純な固定パスに置き換えられます。インクリメンタルのリビルド パフォーマンスを高めるために、ディスク スペースをある程度犠牲にすることもできます。</p>
    
<p>このサンプルは Windows でのみ実行できます。WinForms、MSBuild、および Content Pipeline は、Xbox 360 では使用できません。ゲームを Xbox 360 で実行する場合、前もってすべてのコンテンツを Visual Studio プロジェクトの一部としてビルドしておく必要があります。また、XNA Framework の再頒布可能なインストーラーには Content Pipeline が含まれません。このサンプルは、XNA Game Studio を完全にインストールしたコンピューター上でのみ実行できます。</p>

<a name="ID2E4"></a><h2 class="subHeading">最小シェーダー プロファイル</h2><div id="ID2E4" class="hxnx2">
      
      <dl class="glossary">
<dt>頂点シェーダー モデル 1.1</dt>
<dt>ピクセル シェーダー モデル 1.1</dt>
      </dl>
    </div>
  </div>

<a name="ID2EKB"></a><h1 class="heading">サンプルが動作するしくみ</h1><div id="ID2EKB" class="hxnx1">
    

<p>このサンプルは、以前に WinForms グラフィック デバイスのサンプルで示した GraphicsDeviceControl.cs、GraphicsDeviceService.cs、および ServiceContainer.cs ファイルを再利用します。このコードの詳細については、元のサンプルを参照してください。</p>

<p>アプリケーションのメイン フォームには、<b>GraphicsDeviceControl</b> から派生した単一の <b>ModelViewerControl</b> が含まれます。このコントロールには任意の <b>Model</b> オブジェクトを割り当てることができ、そのモデルを少しずつ回転させながら表示します。モデルが変更されると、新しいオブジェクトのサイズと中心を識別するために、<b>MeasureModel</b> メソッドが使用されます。これにより、モデルは常に表示され、画面の中心に置かれ、適切なサイズで描画されるようになります。これは、ビルドされたときのスケールやモデル データの原点の位置に関係なく該当します。</p>

<p><b>MainForm</b> コンストラクターは、次の 2 つの重要なワーカー クラスを作成します。<b>ContentBuilder</b> は、コンテンツ ファイルを動的にインポートおよび処理するために使用され、<b>ContentManager</b> は、ビルドされた後にコンテンツを読み込むために使用されます。ユーザーが 3D モデル ファイルを選択できるようにファイル セレクターを表示した後に、<b>Form1.LoadModel</b> メソッドが次のステップを実行します。</p>

    <ol>
<li><b>ContentManager.Unload</b> を呼び出して、以前のモデル データをすべてアンロードします。</li>
<li><b>ContentBuilder.Add</b> を呼び出して、ビルドする新しいファイルと使用するプロセッサを指定します。このサンプルでは常に、XNA Framework が標準で提供している <b>ModelProcessor</b> を指定するだけですが、より高度なアプリケーションでは、他のカスタム プロセッサを使用できます。</li>
<li><b>ContentBuilder.Build</b> を呼び出して、選択したコンテンツをビルドします。</li>
<li>ビルド エラーが発生したかどうかを調べ、ビルドが失敗した場合にメッセージ ボックスを表示します。</li>
<li><b>ContentManager.Load</b> を呼び出して、ビルドされたばかりのモデルを読み込み、この新しいオブジェクトを表示するように、<b>ModelViewerControl</b> を設定します。</li>
    </ol>

<p><b>ContentBuilder</b> クラスはより単純です。このクラスは、コンテンツのビルドに使用するコンテンツ パイプライン アセンブリのリストを宣言します (このサンプルでは、XNA Game Studio に組み込まれている 4 つの標準インポーターを指定するだけです)。MSBuild <b>Engine</b> オブジェクト、MSBuild <b>Project</b> オブジェクト、および MSBuild <b>ILogger</b> インターフェイスを実装するカスタムな <b>ErrorLogger</b> クラスという、ビルドの実行に使用される 3 つのヘルパー クラスを宣言します。<b>CreateBuildProject</b> メソッドは、MSBuild オブジェクト モデルを使用して、XNA Framework コンテンツのビルド用の単純なプロジェクトを作成します。これは、このプロジェクトの最後に、標準 <b>ContentPipeline.targets</b> ファイルへの参照を追加します。参照は、コンテンツ ビルドの実行に必要な MSBuild ターゲットを宣言します。<b>Add</b> および <b>Clear</b> メソッドは、プロジェクトに含めるコンテンツ ファイルを変更します。最後に <b>Build</b> メソッドは、ビルド処理を実行し、問題が発生した場合に、エラー メッセージのリストを返します。</p>

<a name="ID2E1D"></a><h2 class="subHeading">一時ディレクトリの管理</h2><div id="ID2E1D" class="hxnx2">
        

<p><b>ContentBuilder</b> クラスはコンテンツを一時ディレクトリにビルドします。<b>ContentLoader</b> はそのディレクトリからコンテンツを読み込めます。ここで、どのディレクトリを使用すればよいか、という疑問が生じます。まだ使用されていない場所が必要です。理想的には、プログラムの終了時に、これらの一時ファイルを削除する必要があります。</p>

<p><b>ContentBuilder.CreateTempDirectory</b> は、<b>Path.GetTempPath</b> を呼び出すことによって一時ディレクトリに適切な場所を探して、その場所を選択します。続いて、ネストされたディレクトリを作成します。この名前は <b>GetType().FullName</b>によって返される &quot;WinFormsContentLoading.ContentBuilder&quot; になります。他のプログラムがこの名前のディレクトリを使用する可能性は低いです。</p>

<p>しかし、ユーザーがこのプログラムの複数のコピーを同時に実行した場合はどうでしょうか。両方のインスタンスが同じ一時ディレクトリを使用しようとし、この結果、競合が発生します。解決策は、<b>Process.GetCurrentProcess().Id</b> をディレクトリ名の一部に含めることです。これにより、プロセスごとに異なるディレクトリが選択されます。</p>

<p>では、単一のプログラムで <b>ContentBuilder</b> クラスの複数のインスタンスを作成する場合はどうでしょうか。このサンプルではこのような動作は行いません。ただし、他のプログラムではその可能性があり、サポートするために堅牢な実装をする必要があると考えられます。<b>ContentBuilder</b> の両方のインスタンスが同じ一時ディレクトリを使用しようとした場合、競合が発生します。この解決策は、&quot;ソルト&quot; と呼ばれる固有の整数値をディレクトリ名の一部に含めることです。新しい <b>ContentBuilder</b> を作成するごとに、ソルトを増やします。最初のインスタンスには 1 を、次のインスタンスには 2 を、続いて 3 というように増やします。それぞれのインスタンスに別々のディレクトリ名が選択されます。</p>

<p>終了したときに、一時ディレクトリをクリーン アップする場合はどうでしょうか。これは、<b>Dispose</b> が呼び出す <b>ContentBuilder.DeleteTempDirectory</b> によって処理されます。<b>DeleteTempDirectory</b> は、ほとんどすべての状況で適切に処理を行います。それでもまだ次のような問題があります。このシャットダウン コードを実行する機会を得る前に、プログラムがクラッシュしたり、デバッガーで強制的に停止された場合はどうなるでしょうか。完成したプログラムではクラッシュしないのが理想的です。残念ながら、開発およびテスト中に、クラッシュが多く発生する可能性が高いです。クラッシュが起きるたびに余分な一時ディレクトリが残ると、ハード ドライブ内が散乱した状態になり、厄介です。この解決策が <b>PurgeStaleTempDirectories</b> メソッドです。このメソッドは起動時に呼び出されます。一般に、クラッシュした後ではクリーンアップを実行できませんが、プログラムを次回実行するときに、同じプログラムを以前に実行したことで残された無効なディレクトリがあるかどうかを調べて、必要に応じてそれらを削除できます。</p>

<p>アプリケーションによっては、常に同じ一時ディレクトリ名を使用し、そのディレクトリを削除しないようにすることもできます。この場合、ハード ドライブ内にファイルが残されることになります。コンテンツ ビルド プロセスはインクリメンタルです。プログラムが、既に以前の実行時にビルドされた同じコンテンツ ファイルを読み込もうとした場合、実際のコンテンツ ビルド プロセスを実行する必要はありません。これにより、起動するごとに同じファイルを読み込む可能性のあるレベル エディターなどのプログラムの読み込み時間を短縮できます。</p>
    </div>

  </div>

</div><div class="footer" id="footer"><p>&copy; 2008 Microsoft Corporation. All rights reserved.<br>ご意見・ご質問は <a href="mailto:xnags@microsoft.com?subject=Documentation Feedback: WinForms Content Loading Sample">xnajapan@microsoft.com</a> にお送りください</p></div></div></body></html>